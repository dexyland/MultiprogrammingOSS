
import java.awt.EventQueue;

import javax.swing.JFrame;

import operatingSystem.*;
import javax.swing.JLabel;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;

public class GUI {

	private JFrame frame;
	private JLabel lblTime;
	private Timer timer;

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI window = new GUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
				
				while(true) {
					
				}
			}
		});
		
		timer = new Timer();
		PQcallback pq = new ProcessQueue();
		CPUCycle cpu = new CPU();
		
		cpu.register(pq);
		timer.registerqc(pq);
		timer.registercc(cpu);
		timer.startTimer();
		pq.startPrioritySystem();
		
		
	}

	/**
	 * Create the application.
	 */
	public GUI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 695, 593);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{0, 0, 0, 0};
		gridBagLayout.rowHeights = new int[]{0, 0, 0, 0, 0, 0};
		gridBagLayout.columnWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		frame.getContentPane().setLayout(gridBagLayout);
		
		lblTime = new JLabel("0");
		GridBagConstraints gbc_lblTime = new GridBagConstraints();
		gbc_lblTime.gridx = 2;
		gbc_lblTime.gridy = 4;
		frame.getContentPane().add(lblTime, gbc_lblTime);
	}

	private void changeText(){
		this.lblTime.setText(String.valueOf(this.timer.getTime()));
	}
}
